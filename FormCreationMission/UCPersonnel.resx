<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE8AAABPCAYAAACqNJiGAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAADclJREFUeF7tnAl0FEUax+Oq+9x1j7fPVRG6Z7p6DsIkPU8NyCEYyRIRDIQ7EAlX
        JEEEAUESDgUEAUFgUQ4jSU8SjoWAEAkBAiogIDkQUBYFV/fBigdyJAiIHMm37+tJDz1f9yQzBHUm8H/v
        /3qmu6vqq99UV1fPVE1Y2C3d0i1VKyMq6k6ZFxJcPJv6jtnWe29U1J30nFsyUN69jj+5OGGLi2ew1myD
        MosTSsXIHcVW61/oubek0RKzuYmLZweyeQaFQmPYa3F6XCZKhz5ikkTT3PRa/oD97zInzHBxws9rzDbY
        JUZ6gdMAvFwqSnNKzI4GNI+bTpn3NP6zzAnTZJ6dzzNbYacYoQNm5DKLdLFElGZvFaP+SvO8KZTVSGju
        4thXeIkWsSY6QP64THT+r5hJbWje9VrZvNBL5oRLubwIH9bQ2g620u+jxku52BKRRMuol8pqxHrIPLua
        w4u6y/Tjxk442NwJRzo64dQ0Cao2S3BqqgRHOrj343EKTwFocVaWMCmRllWvlGM2PyRz7CIOQz5gDh2E
        z9o6oapI8mk8TtNoAF7czSKa0TLrhfIcjt+7OHYIwb1rtusqjz70WM3wDrXRp/EGKH2xzWy+i5Yd8pI5
        YQyCw36uxCLpKo7e53BCZaEeGvpqgeTzstW6xCJNoGWHtHLvv/9umWenEB4d/FKfekUPDn1yijFw6jJR
        Or3+gag/0hhCVi6TkITgcFiyR6wZwicPO+HSKm9wP6+U4JOH9Of6cjGLSKYxhKxcHHsX4a0yWXUVNTLe
        Wc8tdoPD7afN9efU5DJR2kRjCElNCgv7ncwJZ/25ZKkPttDv88dlonQ+LyzsdhpLyCmb5y0IDv2+wfDk
        l/Juc2Q4jSXk5GpkflyFZ/g0YXXCgQed8HmME77sJsHRfhJ8nSrB8aESHH/OvcX3uP/LrhJ8HiMp539s
        1QPT+iOL80kaS8hJ5lknFd5uMRI+beqEr3pJ8H26uz+7sk5/Z/XHV/Ld6U+Mk5T8MF8tvDKLFE9jCXpB
        XtjtsC36jqpc590/LWti3ptiH/lhLxt8lhYOF3IilUcuCsLQeB41PYecfzHXDfO/iRIcS5VGYfkYB8aD
        cdFYg0YQFnbbj69aX67cFHlBVzEfriyMhMt5DvhZDocLb9rh3Gwb/DjVAhUviVAxXoTydAblacy9Hceg
        YqIIZydb4NwMK1yYZ4OLbzWGS8uawNX8iFrhXt0UeaGyIGIKjTsodCpdeAIripWhgXtgbYyEyysc8NMC
        uwLJA+cGGMGef92mfBBX10XoyvZ4XWRHGvtvrtMvCmlKRdKZUomfFtoVSBfm2+H8bBucneID1jgblE9+
        GMpnxkD53HgoX5AIFYsHQkXGYKh4O9W9XTxQ2a8cx/PwfExH8yIwsYWen2dTWjXGg9sfp1nTaOy/uU6P
        ER89M5ZV0UpQHx/K4NjEtvCfab3h6OJ0qNjogorNuYEb062ZDRWukXBmThf4eqi+LGqM72y6uSWNPShU
        PpYln0kTvjiTJpwsT2PfnRkrHPlmGPtsXzcG70czWBXOIEe0wb7Z42Df6+Ph2PL5eijX4fJNObDUHg4r
        w93lYHlYbvlY4YgSB8bjfj2IxhzUcnHmLupQBZ3X/BEFHPr7tW/pQFyvC/7R1lOGYs7chcYScqr+8dpT
        qfUdYz3wzhRm6yBcr3f0S/CCh1/101hCTjIvpGortTkhXgF3YN5EHYC6uGxUqjc8k5BCYwk5yTyboq3U
        1n49FXifzp+kA1AX7x//vPdly7PJNJaQk8yzf3nBG5CgwDv4xo2Fd2DCCApvBY0l5IS/zWortaVv9+qW
        97IOQF28L32YNzyOHaaxhJQyeb6hi2eV2kpt7BanwNs/Z4IOQF2859kBtOVdwWkcNKaQkcwL/UmFYF1M
        tOdue2p9lg7C9Xprj84UHmD5NKaQkYsXCmmFVkiSB943eQt1EK7Xq5s2NYK3gcYUElrayMrhpUMrhC6Z
        PFKB96U8WwfhevzdyoW6MtwWrmRzXCMaW9BL5tlr+sq4vSWpxw0druxLH64rQzXGQWMLemXzQmecOkYr
        g17VNMpz6X73Tt0f0fLbtNaVUQ3uvMwLofeNMkrmmCTzbD+tFHrn6BQF3uGM6ToYgfirha/q8lbAcWw/
        lk9jCinhT4AujiXLnPBvF8+q1MqtbtXC0/pOrMvQQfHXhe3baaFVKeVwLLle/PSoCr+mr26JL8i8IOOd
        eNeY1CMI79CiqToo/vhoxswvMB/ML5tnozB/LIeWXS9VMmtMg9LX0s8iwKNL5+ng1OSTG1wVx/IzG9I8
        bxrFxcW9MLxvQlXZ7HHKE4e/N4/TG7Nh3LPJVQMHDkynedZb5YrifVk8G4WvEVxcXBygJyQnwcez8Wuq
        l+CH/CU6WFqf2ZQDs8YMg6SkJBgyZAgMHjxYmVLm4sWRWQ2s99Iy64UQnMwLB/FZd+QjLeS4uLgqBNe9
        e3fo3bs3vDggEXZOH6sA/Hb1Ih009PH8JTB1xBDo06ePAq7aVS/Ftl/mfoYWDubeL95Hyw5pKeDcd1vl
        rpghWKFPbKzS6gYMGKBAQCDd4jvDy4P7wZLRQyBv8mgonDsZiha8CgXzpsDctOehZ7euFByM6psES0S7
        ZmwnHKw3LXCmVeKqW5zXOGyRaIPE2FhISUnxgBg0aBAkJCRAly5dID4+3mN8j/vxuDe4vpBhC9eN8bAF
        /tMRZaKxhIT6R0ff1b19+25dOnZc17/9k4bPt+i3BSukd+vuBcRfY7pM0abLU/Xwnr0qn33mmU1DBw7s
        MykuLrhnirrn4bFmMs/md+rYsVy9GfTs0QMybE10ldP6tUfbwHDSqnx5+MBBMKtVG10eWi8S7TCgf/9r
        6VJSzpWIkRm7mNQmqAbPmQ0Es8yz8S6eHcbAZZOoQPPA69kTpkfH6CpInSlYYXp0WxhZfRelHtk3STme
        JVh1aanHRTWD/lp4Q4Z4Zk+VWqSjxRbplQ+Z007r8qtokcn0N3wEcvFsu/ab4uUmC2wVHTp4I/r1V6DS
        SvryIocEM9tEw+QnO8DM1tHKe3qOL2eZROjVvr1PeNemoDmrSkWpuJRJQ3eLzl/8Dn1bFmfuKvPCGlyd
        SIPeIDR2r421OnXwMHiEQdP8Ep74UJRSbm3wvECK0pUCs319ron1pJW+IdLO8NQal0Ft00yX9QXvueRn
        IMNec9+neoXJAitN7ssTt/ienmPkhaIdunboEDC899i1uJaZLW1p3essmWNFNFhckELXj/mCh34xoTfI
        5ppBYJ44g3S12Q0Pt/ge99Nztc40idAvJsZTrr/wtrMIZYkD5rGUF2EHc2yjda+TcszmljRY9BaDpZ41
        wUO/9Wi0J1hq3L+9uhVr4bkr6agx3ZwHm3mV6w88XBStfih4BeGcaewLSwTpMcrgumXU6tDLTKJuUUpt
        8JY/Fqtc5hgsza9IuPZhUHhoPE7TqN3G21GtAoK3R4xU4lfhaxcSlorSB5TBdam61Xm+xFShqa+xP9Ku
        JfMHHp6HlyIualHzWU8W8xnBQ+OiPzUNpsd8cH8g8DBebT9qdAXtvhGtz8WzzVpwaGzeuCBFfZ9nsip3
        2kDgoTHNJiEc8H8F1PSqfcHD8/B8TKfd7y88TI/xqrH7WlhTIkp16/uUpewE3GqzzVNAvqYVqMtAA4FX
        k33B82V/4Wljxtc0H9XY9+0RHa0pE7+VxbF8Cm8Hu3Z3xU9RrSQa+41ghocrkK41gmtXiy+XWKRCysQv
        yY1Em0zmmeCYixZQbJFgaXUfiH1hsSU44ZVaJE9fjfH6WvOrNS6/3yVIjSmbWuXihDm01W016FjR2k+0
        kIUHJTzsI9UYA1kDVyJGLqBsatQcjvuDi2enteBwPFRqkLlq9Ykg12QJSnjq1eHvslXVpRapYm8gi5/p
        PGK0r/8FUP1edesz+lYlGOCp9cA4adraHNBfj2TzwgYKz3DFosbYKnHAGszwML7abhJGLhGlLZSRoXIa
        NrzHxQmXteCWmSy6DI2M469ghveOZpgViMtE56WtDcPvoax0Uv8PQOv1PgaS1BuF8FrhrekSA4cfd9Tq
        tXb3EwBu6TEj58Q2rxUexkdj9tfFzFn7/xa4OLaKwsNvHmhmRsa7WG3wtoxqo1vWZOQNzdxl45YeM/K6
        lIdrhRfIXZa6VIzMp6y8NCks7A6ZY+VacIH0Ewg5mOH52wiMXCZKZ2v8B0n8AYe2Ou3jWG3eIQY3PIyP
        xhyId1siWlFmHrk4NprCC6SfMILXo0ePegOv2CKNp8w82tGOrdsew0DrzxMdcHSA0y8fiNf3efijtbYS
        H0x5HC68Ya/VG1u7B7W4pceMXJDm/WVoYmKiDh7GR2MOxMeSpQLKTBFMCvvdyTHstNcnms6Upey61dI+
        /O0benhodVIOemdGO106I29+wj1UwS09ZuTNc1t6ldm5c2ecBOQFD+Oj6QLx1YLIHwAM5v8dG8Q3pIuN
        cT0/zaAm+4LXqVMnePrpp5WpFb8WPDRO08C5MKmp7kV9dYVXuVmCE7MM/q/0+DDWjvYjuLydZlCTfcHT
        umheS106I98IeFrfCHjoiysc+v9rOTGKDaXwcF0+TVyT/YGHlaTpjBys8C6vjRhB2YWdeEFoXz6WzdD6
        YmbjGVVFkt/+9s0mM2QTm/HUU0/5dNG8Frp0Ri6KtcyQOaZs6TEjY760LK0xL4yPpgvUV941aHm3dEu/
        qv4PuOqErpppAr0AAAAASUVORK5CYII=
</value>
  </data>
</root>